name: Deploy Backend to AWS

on:
  push:
    branches: [main]
    paths: ['server/**', 'package.json']

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Debug - Check if secrets are available
        run: |
          echo "Checking if AWS secrets are available..."
          if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then
            echo "‚ùå AWS_ACCESS_KEY_ID is empty or not set"
          else
            echo "‚úÖ AWS_ACCESS_KEY_ID is set (length: ${#AWS_ACCESS_KEY_ID})"
          fi
          
          if [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then
            echo "‚ùå AWS_SECRET_ACCESS_KEY is empty or not set"
          else
            echo "‚úÖ AWS_SECRET_ACCESS_KEY is set (length: ${#AWS_SECRET_ACCESS_KEY})"
          fi
          
          if [ -z "${{ secrets.AWS_REGION }}" ]; then
            echo "‚ùå AWS_REGION is empty or not set"
          else
            echo "‚úÖ AWS_REGION is set: ${{ secrets.AWS_REGION }}"
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: Configure AWS credentials
        run: |
          echo "Configuring AWS credentials..."
          aws --version
          aws sts get-caller-identity
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: sa-east-1
      
      - name: Install dependencies
        run: |
          echo "üì¶ Installing production dependencies..."
          npm install --production --no-optional
      
      - name: Create deployment package
        run: |
          echo "üì¶ Creating deployment package for enhanced-debug-server-v5..."
          
          # Criar estrutura para deploy
          mkdir -p deploy
          
          # Copiar apenas arquivos necess√°rios para o servidor v5
          cp server/enhanced-debug-server-v5.cjs deploy/
          cp package.json deploy/
          cp -r node_modules deploy/
          
          # Criar zip
          cd deploy
          zip -r ../deploy.zip .
          cd ..
          
          # Mostrar conte√∫do
          echo "‚úÖ Package created: $(ls -lh deploy.zip)"
          echo "üìã Package contents:"
          unzip -l deploy.zip | head -20
      
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: operabase-backend-mvp
          environment_name: operabase-backend-mvp-env-1
          region: sa-east-1
          version_label: enhanced-debug-v5-${{ github.run_number }}-${{ github.sha }}
          deployment_package: deploy.zip
          wait_for_deployment: true
          wait_for_environment_recovery: 60 