name: Deploy Backend to AWS

on:
  push:
    branches: [main]
    paths: ['server/**', 'package.json']

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Debug - Check if secrets are available
        run: |
          echo "Checking if AWS secrets are available..."
          if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then
            echo "❌ AWS_ACCESS_KEY_ID is empty or not set"
          else
            echo "✅ AWS_ACCESS_KEY_ID is set"
          fi
          
          if [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then
            echo "❌ AWS_SECRET_ACCESS_KEY is empty or not set"
          else
            echo "✅ AWS_SECRET_ACCESS_KEY is set"
          fi
      
      - name: Install production dependencies only
        run: |
          echo "Installing minimal production dependencies..."
          npm ci --production --no-optional --no-audit --no-fund
      
      - name: Create ultra-lightweight deployment package
        run: |
          echo "Creating minimal deployment package..."
          mkdir -p deploy
          
          # Copy only essential files
          cp server/enhanced-debug-server-v5.cjs deploy/
          cp package.json deploy/
          
          # Copy only production node_modules (minimal)
          cp -r node_modules deploy/
          
          # Create minimal package structure
          cd deploy
          
          # Zip with maximum compression
          zip -r9 ../enhanced-debug-v5-github.zip .
          
          cd ..
          
          # Show package size
          ls -lh enhanced-debug-v5-github.zip
          
          echo "✅ Deployment package created successfully"
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1
      
      - name: Upload to S3 and Deploy to Elastic Beanstalk
        run: |
          echo "Uploading to S3..."
          aws s3 cp enhanced-debug-v5-github.zip s3://elasticbeanstalk-sa-east-1-898382192308/
          
          echo "Creating application version..."
          aws elasticbeanstalk create-application-version \
            --application-name operabase-backend-mvp \
            --version-label enhanced-debug-v5-github-${{ github.run_number }} \
            --source-bundle S3Bucket=elasticbeanstalk-sa-east-1-898382192308,S3Key=enhanced-debug-v5-github.zip \
            --description "Enhanced Debug Server v5 - GitHub Actions Deploy #${{ github.run_number }}"
          
          echo "Deploying to environment..."
          aws elasticbeanstalk update-environment \
            --environment-name operabase-backend-mvp-env-1 \
            --version-label enhanced-debug-v5-github-${{ github.run_number }}
          
          echo "✅ Deployment initiated successfully"
      
      - name: Wait for deployment (with timeout)
        run: |
          echo "Waiting for deployment to complete..."
          timeout 600 aws elasticbeanstalk wait environment-updated --environment-name operabase-backend-mvp-env-1 || {
            echo "⚠️ Deployment timeout reached, but process may still be running"
            echo "Check AWS console for deployment status"
          }
          
          echo "✅ Deployment process completed" 